@inject IPersonApi PersonApi

@page "/persons"
@using Application.Shared.Dtos.Persons
@using Microsoft.AspNetCore.Components.QuickGrid

@inject NavigationManager NavigationManager

<h3>List</h3>


<button type="button" @onclick="CreatePerson" class="btn btn-primary">Create</button>

@if (persons == null)
{
    <p><em>Loading...</em></p>
}
else
{

    <QuickGrid Items="@persons">
        <PropertyColumn Property="@(p => p.Name)" Sortable="true" />
        <PropertyColumn Property="@(p => p.Email)" Sortable="true" />
        <PropertyColumn Property="@(p => p.Phone)" Sortable="true" />
        <PropertyColumn Property="@(p => p.Address)" Sortable="true" />
        <TemplateColumn Title="Actions">
            <button type="button" @onclick="@(()=>Edit(context.Id))" class="btn btn-primary">Edit</button>
        </TemplateColumn>
    </QuickGrid>

    @* <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Email</th>
                <th>Phone</th>
                <th>Address</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var person in persons)
            {
                <tr>
                    <td>@person.Id</td>
                    <td>@person.Name</td>
                    <td>@person.Email</td>
                    <td>@person.Phone</td>
                    <td>@person.Address</td>
                    <td>
                    </td>
                </tr>
            }
        </tbody>
    </table>
 *@
}


@code {

    private IQueryable<PersonDto> persons;

    protected override async Task OnInitializedAsync()
    {
        persons = (await PersonApi.GetPersonsAsync())?.AsQueryable();
    }

    void CreatePerson()
    {
        NavigationManager.NavigateTo("/persons/create");
    }
    void Edit(int id)
    {
        NavigationManager.NavigateTo($"/persons/{id}");
    }
}